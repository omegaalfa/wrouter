name: üß™ CI

on:
  push:
    branches:
      - 'main'
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ["8.4"]
    name: ‚öôÔ∏è Running test for PHP ${{ matrix.php }}
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Determine commit range
        id: commit-range
        run: |
          git fetch --prune
          LAST_COMMIT=$(git rev-parse ${{ github.event.before }} || git rev-parse HEAD~1)
          CURRENT_COMMIT=$(git rev-parse HEAD)
          echo "LAST_COMMIT=$LAST_COMMIT" >> $GITHUB_ENV
          echo "CURRENT_COMMIT=$CURRENT_COMMIT" >> $GITHUB_ENV
          echo "Debug: Commit range $LAST_COMMIT..$CURRENT_COMMIT"

      - name: Check commit messages
        id: commit-check
        run: |
          COMMITS=$(git log --format='%s' "${LAST_COMMIT}..${CURRENT_COMMIT}")
          echo "Debug: All commits in range:"
          echo "$COMMITS"
          CONVENTIONAL_COMMITS=$(echo "$COMMITS" | grep -E '^(feat|fix|docs|style|refactor|test|build|perf|ci|chore|revert|merge|wip): ' || true)
          echo "Debug: Conventional commits found:"
          echo "$CONVENTIONAL_COMMITS"
          echo "stdout<<EOF" >> $GITHUB_OUTPUT
          echo "$CONVENTIONAL_COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Verify commit messages
        run: |
          echo "Debug: Commit check output: '${{ steps.commit-check.outputs.stdout }}'"
          if [ -n "${{ steps.commit-check.outputs.stdout }}" ]; then
            echo "Commit messages are following Conventional Commits specification."
          else
            echo "Some commit messages do not follow Conventional Commits specification."
            git log --format='%s' "${LAST_COMMIT}..${CURRENT_COMMIT}"
            exit 1
          fi

      - name: üß∞ Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: xdebug
          tools: composer:v2, phpstan

      - name: üîç Check PHP version
        run: php -v

      - name: üì¶ Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: üì• Install dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: ‚úÖ Run tests
        run: vendor/bin/phpunit tests --colors=always --testdox --do-not-fail-on-empty-test-suite

      - name: üß™ Generate coverage report
        run: vendor/bin/phpunit --coverage-text --coverage-clover=coverage.xml

      - name: üîé Run static analysis
        run: vendor/bin/phpstan analyse --level=max src tests
